msgid ""
msgstr "Project-Id-Version: Game v4.7.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: Sat Oct 26 18:10:08 2024\n"
"Last-Translator: \n"
"Language-Team: none\n"
"Language: en\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit"

#: GameServer.RpcHandlers
msgid "level completed! ðŸŽ‰"
msgstr ""

#: GameServer.RpcHandlers
msgid "level completed with warningsâ€¦ ðŸŽ­"
msgstr ""

#: GameServer.RpcHandlers
msgid "intermediate goal solved! ðŸŽ‰"
msgstr ""

#: Game.Levels.inception
msgid "inception"
msgstr ""

#: Game.Levels.inception
msgid "Garnet: To explain the program itself, I must unfuse to show each explain how lean handles proofs.\n"
"Then we will do simple arithmetic.\n"
"\n"
"Ruby and saphire: Lets begin\n"
"\n"
"There are two levels you can pick.\n"
"One for theroems, while another is for tactics. One level will build on the other and vice versa.\n"
"In the end you will have everything you will need in order to prove simple arrithmatic."
msgstr ""

#: Game.Levels.Ruby.simpletactics
msgid "Simple tactics"
msgstr ""

#: Game.Levels.Ruby.simpletactics
msgid "Ruby: We will first look at our first tactic: `rfl`\n"
"`rfl` is an abreviation of 'reflexivity of equality' meaning that the result is the same\n"
"no matter what. For example $$a=a$$, $$b=b$$ and more advanced equations like $$a+b=a+b$$ can be prove via `rfl`\n"
"Try it out."
msgstr ""

#: Game.Levels.Ruby.simpletactics
msgid "Ruby: There you go Its that simple. Now lets see annother tactic."
msgstr ""

#: Game.Levels.Ruby.Rewrite_Respond
msgid "Rewrite, Respond"
msgstr ""

#: Game.Levels.Ruby.Rewrite_Respond
msgid "Ruby: Lets look at annother one `rw` and `rewrite`. Both of them do the same thing. However there is one difference between them. See if you can spot it"
msgstr ""

#: Game.Levels.Ruby.Rewrite_Respond
msgid "Ruby: Heres the difference, `rw` has `rfl` built in while `rewrite` does not.\n"
"So when using `rewrite` to close a goal you must use rfl in the end.\n"
"\n"
"However, it is common practice to use `rw` instead of `rewrite` for conciseness."
msgstr ""

#: Game.Levels.Ruby.Rewrite_Respond
msgid "Ruby: Now you know what you need for this world and later worlds.\n"
"More tactics will be introduce in other worlds when needed"
msgstr ""

#: Game.Levels.ruby
msgid "Ruby: simple tactics"
msgstr ""

#: Game.Levels.ruby
msgid "Ruby: This world will explain tactics. Tactics are like plans on a warfield.\n"
"\n"
"Tactics are used to change, create a proof, and close a proof.\n"
"These are the only ways to complete proofs in lean"
msgstr ""

#: Game.Levels.Saphire.theroems
msgid "Theorems: Building blocks"
msgstr ""

#: Game.Levels.Saphire.theroems
msgid "Saphire:Theorems in lean are built by `apply`ing arguments upon eachother.\n"
"  Some theorems are built when it gets used in tactics. While others can be used.\n"
"  One example is `rfl` Lets see how you try it."
msgstr ""

#: Game.Levels.Saphire.theroems
msgid "Saphire: Great. Now lets see annother theorem of rfl."
msgstr ""

#: Game.Levels.saphire
msgid "Saphire: building blocks"
msgstr ""

#: Game.Levels.saphire
msgid "Saphire: This world will proove all of the theorems needed for you to prove simple arrithmatic using built-in theorems.\n"
"This world only uses one tactic `apply`."
msgstr ""

#: Game
msgid "Hello World Game"
msgstr ""

#: Game
msgid "Through some sort of accidentnt you tried when making a wormhole. You accidentally enter a different world.\n"
"There are humans. arround. You thought that you are home. Just then, you notice, big donut store.\n"
"You realize tat you are in beach city. In the world you know as steven universe.\n"
"You know that steven, and the crystal gems are powerful enough to take you back to home.\n"
"However, when meeting them, you quickly realize that they are working on something. They are working on the something called the 'LEAN theorem prover'\n"
"Just before you close a gem spots you.\n"
"\n"
"Garnet: Hello there human. Looks like you come from a different world. Your memory could have been erased with the trip.\n"
"I and the crystal gems will help you learn how to prove things in lean.\n"
"\n"
"Lean is a proof asistant and a flexible language that allows you to create proofs.\n"
"Using tactics to try and prove the proof.\n"
"We will start with simple proofs and beginner tactics to more advanced proofs, like logic in sets and functional proofs"
msgstr ""

#: Game
msgid "Steven universe and its characters is the proprety of cartoon network and by turner broadcasting service.\n"
"This is a fan-made creation, not an offical product from cartoon network."
msgstr ""

#: Game
msgid "Game Template"
msgstr ""

#: Game
msgid "A steven universe story for the lean"
msgstr ""
